{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuel/Downloads/strapi/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './index.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { useQuery, gql } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport { ReactDOM } from 'react-dom';\nconst client = new ApolloClient({\n  uri: 'https://48p1r2roz4.sse.codesandbox.io',\n  cache: new InMemoryCache()\n});\nconst EXCHANGE_RATES = gql`\n  query GetExchangeRates {\n    rates(currency: \"USD\") {\n      currency\n      rate\n    }\n  }\n`;\n\nfunction ExchangeRates() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(EXCHANGE_RATES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return data.rates.map(({\n    currency,\n    rate\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [currency, \": \", rate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, currency, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n}\n\n_s(ExchangeRates, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ExchangeRates;\nclient.query({\n  query: gql`\n      query GetRates {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n}).then(result => console.log(result));\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(ExchangeRates, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeRates\");","map":{"version":3,"sources":["/Users/samuel/Downloads/strapi/src/index.js"],"names":["React","App","ApolloClient","InMemoryCache","useQuery","gql","ApolloProvider","ReactDOM","client","uri","cache","EXCHANGE_RATES","ExchangeRates","loading","error","data","rates","map","currency","rate","query","then","result","console","log","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAGA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,QAAT,EAAkBC,GAAlB,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,EAAAA,GAAG,EAAE,uCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFuB,CAAjB,CAAf;AAKA,MAAMQ,cAAc,GAAGN,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASO,aAAT,GAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACO,cAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,kBACpB;AAAA,2BACE;AAAA,iBACGD,QADH,QACeC,IADf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAUD,QAAV;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD;;GAbQN,a;UAC0BR,Q;;;KAD1BQ,a;AAqBTJ,MAAM,CACHY,KADH,CACS;AACLA,EAAAA,KAAK,EAAEf,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AAPS,CADT,EAUGgB,IAVH,CAUQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVlB;AAaAf,QAAQ,CAACkB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,0BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UADA,eAEA,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEjB,MAAxB;AAAA,2BACA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOEkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF","sourcesContent":["import React from 'react';\nimport './index.css';\nimport App from './App';\n\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { useQuery,gql } from '@apollo/client';\nimport { ApolloProvider} from '@apollo/client';\nimport { ReactDOM } from 'react-dom';\n\nconst client = new ApolloClient({\n  uri: 'https://48p1r2roz4.sse.codesandbox.io',\n  cache: new InMemoryCache()\n}); \n\nconst EXCHANGE_RATES = gql`\n  query GetExchangeRates {\n    rates(currency: \"USD\") {\n      currency\n      rate\n    }\n  }\n`;\n\nfunction ExchangeRates() {\n  const { loading, error, data } = useQuery(EXCHANGE_RATES);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.rates.map(({ currency, rate }) => (\n    <div key={currency}>\n      <p>\n        {currency}: {rate}\n      </p>\n    </div>\n  ));\n}\n\n\n\n\n\n\n\nclient\n  .query({\n    query: gql`\n      query GetRates {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n  })\n  .then(result => console.log(result));\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  <ApolloProvider client={client}>\n  <ExchangeRates />\n  </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}