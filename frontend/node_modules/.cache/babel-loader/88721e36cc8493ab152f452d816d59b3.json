{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bebe/Downloads/strapi/frontend/src/components/Flights.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, useMutation, gql } from \"@apollo/client\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4001/api\",\n  cache: new InMemoryCache()\n});\nconst GET_FLIGHTS = gql`\nquery GETFLIGHTS {\n  planets {\n    code\n    departure_at\n    name\n    seat_count\n    launching_site\n    landing_site\n  }\n}\n`;\n\nfunction Flights({\n  onFlightSelected\n}) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_FLIGHTS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.flights.map(flights => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardFlight\",\n      id: \"flights.id\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: flights.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: flights.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: flights.seat_count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: flights.launching_site\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: flights.landing_site\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Flights, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Flights;\n\nclass AllFlights extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n        client: client,\n        children: /*#__PURE__*/_jsxDEV(Flights, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AllFlights;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flights\");","map":{"version":3,"sources":["/Users/bebe/Downloads/strapi/frontend/src/components/Flights.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useQuery","useMutation","gql","client","uri","cache","GET_FLIGHTS","Flights","onFlightSelected","loading","error","data","message","flights","map","code","description","seat_count","launching_site","landing_site","AllFlights","Component","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,GANF,QAOO,gBAPP;AASA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,EAAAA,GAAG,EAAE,2BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFuB,CAAjB,CAAf;AAKA,MAAMQ,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAeE,SAASK,OAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAwC;AAAA;;AACtC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACM,WAAD,CAAzC;AAEA,MAAIG,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,sBACI;AAAA,cACCD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBD,OAAO,iBACrB;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,EAAE,EAAC,YAA/B;AAAA,8BACF;AAAA,kBAAIA,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cADE,eAEF;AAAA,kBAAIF,OAAO,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFE,eAGF;AAAA,kBAAIH,OAAO,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHE,eAIF;AAAA,kBAAIJ,OAAO,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJE,eAKF;AAAA,kBAAIL,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,cALE;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD;;GAnBQZ,O;UAC0BP,Q;;;KAD1BO,O;;AAuBX,MAAMa,UAAN,SAAyBxB,KAAK,CAACyB,SAA/B,CAAwC;AACpCC,EAAAA,MAAM,GAAE;AACN,wBACA;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEnB,MAAxB;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAOD;;AATmC;;AAYtC,eAAeiB,UAAf","sourcesContent":["import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  useMutation,\n  gql\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4001/api\",\n  cache: new InMemoryCache()\n});\n\nconst GET_FLIGHTS = gql`\nquery GETFLIGHTS {\n  planets {\n    code\n    departure_at\n    name\n    seat_count\n    launching_site\n    landing_site\n  }\n}\n`;\n\n\n \n  function Flights ({ onFlightSelected }) {\n    const { loading, error, data } = useQuery(GET_FLIGHTS);\n  \n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n  \n    return (\n        <div >\n        {data.flights.map(flights => (\n            <div className=\"cardFlight\" id=\"flights.id\">\n          <p>{flights.code}</p>\n          <p>{flights.description}</p>\n          <p>{flights.seat_count}</p>\n          <p>{flights.launching_site}</p>\n          <p>{flights.landing_site}</p>\n          </div>\n        ))}\n        </div>\n    );\n  }\n\n\n\nclass AllFlights extends React.Component{\n    render(){\n      return(\n      <div>\n        <ApolloProvider client={client}>\n            <Flights />\n        </ApolloProvider>\n      </div>\n      )\n    }\n  }\n\n  export default AllFlights;\n"]},"metadata":{},"sourceType":"module"}